version: '3.8'

services:
  # PostgreSQL Database Service
  db:
    image: postgres:15-alpine
    container_name: postgres_db
    environment:
      POSTGRES_DB: ronkz_db
      POSTGRES_USER: ronkz_user
      POSTGRES_PASSWORD: django_password
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - django_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U django_user -d django_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Django Web Application Service
  web:
    build: .
    container_name: django_web
    depends_on:
      db:
        condition: service_healthy
    environment:
      # Database configuration
      DB_NAME: ronkz_db
      DB_USER: ronkz_user
      DB_PASSWORD: django_password
      DB_HOST: db
      DB_PORT: 5432
      
      # Django settings
      DEBUG: "False"
      ALLOWED_HOSTS: "localhost,127.0.0.1,0.0.0.0"
      SECRET_KEY: "django-insecure-2(3^x-p60tjs^fqm-t4*-l-(t=86!wq*o+&i&zbbje#j7_75j0"
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    networks:
      - django_network
    restart: unless-stopped

# Named volumes for data persistence
volumes:
  postgres_data:
    driver: local
  static_volume:
    driver: local
  media_volume:
    driver: local
  pgadmin_data:
    driver: local

# Custom network for service communication
networks:
  django_network:
    driver: bridge